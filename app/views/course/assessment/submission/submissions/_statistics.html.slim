- display_grading_results = @submission.published? || can?(:grade, @submission)
- show_graders = \
    can?(:grade, @submission) && @submission.latest_answers.any? { |a| a.grader_id.present? }
div.panel.panel-default
  div.panel-heading = t('.statistics')
  div.panel-body.statistics
    table.table.table-striped
      tbody
        tr
          th = t('.student')
          td = display_course_user(@submission.course_user)
        tr
          th = t('.status')
          td
            - if @submission.graded?
              - if can?(:grade, @submission)
                = Course::Assessment::Submission.human_attribute_name(@submission.workflow_state)
                span.text-warning title=t('.publish_grade_hint')
                  =< fa_icon 'question-circle-o'.freeze
              - else
                / For graded submissions, still show as submitted for students
                = Course::Assessment::Submission.human_attribute_name(:submitted)
            - else
              = Course::Assessment::Submission.human_attribute_name(@submission.workflow_state)
        - if display_grading_results
          tr
            th = @submission.class.human_attribute_name(:grade)
            td
              span.submission-statistics-total-grade>
                = @submission.grade
              ' /
              span.submission-statistics-maximum-grade
                = @submission.assessment.maximum_grade
          - if current_course.gamified?
            tr
              th = @submission.experience_points_record.class.human_attribute_name(:points_awarded)
              - if can?(:grade, @submission)
                / TODO: Factor in time-based experience points
                td
                  = f.input :points_awarded, label: false,
                            input_html: { class: 'submission-points-awarded',
                                          'data-base-points' => @submission.assessment.base_exp,
                                          value: @submission.current_points_awarded },
                            wrapper_html: { class: 'form-inline points-awarded'}
                  span = ' / ' + @submission.assessment.base_exp.to_s
                  div.exp-multiplier.form-inline
                    => t('.multiplier')
                    input.form-control type='number' max='1' min ='0' value='1' step='0.1'
              - else
                td = @submission.points_awarded
        tr
          th = t('.due_at')
          td = format_datetime(@assessment.end_at) if @assessment.end_at
        tr
          th = t('.attempted_at')
          td = format_datetime(@submission.created_at)
        tr
          th = @submission.class.human_attribute_name(:submitted_at)
          - if @assessment.end_at && @submission.submitted_at && \
                                     @submission.submitted_at > @assessment.end_at
            td.text-danger
              strong => format_datetime(@submission.submitted_at)
              span.text-danger.glyphicon.glyphicon-exclamation-sign title=t('.late_submission_warning')
          - else
            td = format_datetime(@submission.submitted_at)
        - if display_grading_results
          tr
            th = @submission.class.human_attribute_name(:grader)
            td = display_user(@submission.publisher) if @submission.publisher
          tr
            th = @submission.class.human_attribute_name(:graded_at)
            td = format_datetime(@submission.published_at) if @submission.published_at

    - if @assessment.questions.length > 1 && display_grading_results
      h4 = t('.grade_summary')
      table.table.table-striped
        thead
          tr
            th = t('.question')
            - if show_graders
              th = t('.question_grader')
            th = @submission.class.human_attribute_name(:grade)
        tbody
          - answer_by_question = \
              @submission.answers.latest_answers.includes(:grader).group_by(&:question)
          - @submission.assessment.questions.each do |question|
            - answer = answer_by_question[question].try(:first)
            tr
              th = format_inline_text(question.display_title)
              - if show_graders
                td = link_to_user(answer.grader) if answer&.grader
              td
                - if answer
                  span.submission-grades-summary-grade> (id="submission-grades-summary-answer-#{answer.id}-grade")
                    = answer.grade
                - else
                  span> 0
                ' /
                = question.maximum_grade
